<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:import="http://www.springframework.org/schema/beans" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
						  	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
						    http://www.springframework.org/schema/beans
						    http://www.springframework.org/schema/beans/spring-beans.xsd
						    http://www.springframework.org/schema/tx
						    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
						    http://www.springframework.org/schema/context
						    http://www.springframework.org/schema/context/spring-context-3.2.xsd
						    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						    http://www.springframework.org/schema/security
						    http://www.springframework.org/schema/task
						    http://www.springframework.org/schema/task/spring-task-3.0.xsd  ">


	<!-- Enable @Controller annotation support -->
	<mvc:annotation-driven />
	<context:property-placeholder location="classpath:placeholder.properties" />

	<!-- <task:annotation-driven></task:annotation-driven> -->
	<!-- <bean id="demoServiceBasicUsageCron" class="com.impetus.bookstore.other.ScheduledTasks"></bean> -->

	<mvc:resources mapping="/resources/**" location="/resources/" />

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:message" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<!-- Map simple view name such as "test" into /WEB-INF/test.jsp -->
	<bean id="viewResolver1"
		class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
		<property name="order" value="1"></property>
		<property name="basename" value="views"></property>
	</bean>
	<bean id="viewResolver2"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="2" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- Scan classpath for annotations (eg: @Service, @Repository etc) -->
	<context:annotation-config />
	<context:component-scan base-package="com.impetus" />

	<!-- JDBC Data Source. It is assumed you have MySQL running on localhost 
		port 3306 with username root and blank password. Change below if it's not 
		the case -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/bookstore" />
		<property name="username" value="root" />
		<property name="password" value="sukirti" />
		<property name="validationQuery" value="SELECT 1" />
	</bean>

	<!-- Hibernate Session Factory -->
	<bean id="mySessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<array>
				<value>com.impetus.bookstore.model</value>
			</array>
		</property>
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQLDialect
			</value>
		</property>
	</bean>

	<!-- Hibernate Transaction Manager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="mySessionFactory" />
	</bean>
	<!-- Activates annotation based transaction management -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- For sending mails -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="bookstacksonlinerental@gmail.com" />
		<property name="password" value="bookstacks" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>

	<bean id="mailService" class="com.impetus.bookstore.service.MailService">
		<property name="mailSender" ref="mailSender" />
		<property name="simpleMailMessage" ref="customeMailMessage" />
	</bean>

	<bean id="customeMailMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from" value="bookstacksonlinerental@gmail.com" />
		<property name="to">
			<value>
								<![CDATA[%s]]>
			</value>
		</property>
		<property name="subject">
			<value>
									<![CDATA[%s]]>
			</value>
		</property>
		<property name="text">
			<value>
									<![CDATA[
	Dear %s,
			%s
									]]>
			</value>
		</property>
	</bean>

	<!-- For uploading files -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- setting maximum upload size -->
		<property name="maxUploadSize" value="100000" />
	</bean>

	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<bean id="jsonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</bean>

</beans>


